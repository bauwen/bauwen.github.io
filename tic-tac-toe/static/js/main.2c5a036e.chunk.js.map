{"version":3,"sources":["hooks/Toolbar.js","hooks/Tile.js","hooks/Board.js","hooks/Status.js","hooks/logic.js","index.js","hooks/Application.js"],"names":["Toolbar","starter","onNewGame","onStarterChange","useEffect","console","log","handleStarterChange","event","self","target","value","other","document","getElementById","classList","add","remove","className","onClick","data-toggle","id","type","name","autoComplete","onChange","checked","Tile","position","highlight","gameOver","next","useState","hover","setHover","preview","onMouseOver","onMouseLeave","style","backgroundColor","color","Board","game","onMovePlay","handleClick","grid","map","index","key","winner","tiles","indexOf","full","current","Status","props","newGame","Array","fill","empty","playMove","state","filter","v","length","checkWinner","i","p","j","ReactDOM","render","setStarter","setGame"],"mappings":"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","file":"static/js/main.2c5a036e.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Toolbar.css';\r\n\r\nexport default function Toolbar({ starter, onNewGame, onStarterChange }) {\r\n    useEffect(() => {\r\n        console.log(\"toolbar changed\");\r\n    });\r\n\r\n    const handleStarterChange = (event) => {\r\n        const self = event.target.value;\r\n        const other = self === 'x' ? 'o' : 'x';\r\n\r\n        document.getElementById(\"radio-\" + self).classList.add(\"active\");\r\n        document.getElementById(\"radio-\" + other).classList.remove(\"active\");\r\n\r\n        onStarterChange(self);\r\n    };\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <div\r\n                className=\"btn btn-primary toolbar-item text-button\"\r\n                onClick={onNewGame}\r\n            >\r\n                New Game\r\n                </div>\r\n\r\n            <div className=\"toolbar-item\">\r\n                First:&nbsp;&nbsp;\r\n                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\r\n                    <label id=\"radio-x\" className=\"btn btn-primary active\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"first\"\r\n                            autoComplete=\"off\"\r\n                            value=\"x\"\r\n                            onChange={handleStarterChange}\r\n                            checked={starter === 'x'}\r\n                        /> x\r\n                    </label>\r\n                    <label id=\"radio-o\" className=\"btn btn-primary\">\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"first\"\r\n                            autoComplete=\"off\"\r\n                            value=\"o\"\r\n                            onChange={handleStarterChange}\r\n                            checked={starter === 'o'}\r\n                        />\r\n                        o\r\n                    </label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './Tile.css';\r\n\r\nexport default function Tile({\r\n    value,\r\n    position,\r\n    highlight,\r\n    gameOver,\r\n    next,\r\n    onClick,\r\n}) {\r\n    const [hover, setHover] = useState(false);\r\n\r\n    const handleMouseOver = () => {\r\n        setHover(true);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setHover(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        if (!gameOver && value === '') {\r\n            setHover(false);\r\n            onClick(position);\r\n        }\r\n    };\r\n\r\n    const preview = hover && !gameOver && value === '';\r\n\r\n    return (\r\n        <div className=\"tile\"\r\n            onMouseOver={handleMouseOver}\r\n            onMouseLeave={handleMouseLeave}\r\n            onClick={handleClick}\r\n            style={{ backgroundColor: highlight ? \"yellow\" : \"white\" }}\r\n        >\r\n            <span style={{ color: preview ? \"rgba(0, 0, 0, 0.2)\" : \"black\" }}>\r\n                {preview ? next : value}\r\n            </span>\r\n        </div >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Tile from './Tile.js';\r\nimport './Board.css';\r\n\r\nexport default function Board({ game, onMovePlay }) {\r\n    const handleClick = (position) => {\r\n        onMovePlay(position)\r\n    };\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            {game.grid.map((value, index) =>\r\n                <Tile\r\n                    key={index}\r\n                    value={value}\r\n                    position={index}\r\n                    highlight={game.winner !== '' && game.tiles.indexOf(index) >= 0}\r\n                    gameOver={game.winner !== '' || game.full}\r\n                    next={game.current}\r\n                    onClick={handleClick}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './Status.css';\r\n\r\nexport default function Status(props) {\r\n    return (\r\n        <div className=\"status\">\r\n            {\r\n                props.game.winner !== ''\r\n                    ? `${props.game.winner} wins the game!`\r\n                    : props.game.full\r\n                        ? `Game over! It's a draw.`\r\n                        : `It's ${props.game.current}'s turn.`\r\n            }\r\n        </div>\r\n    );\r\n}","export const newGame = (starter) => ({\r\n    grid: new Array(9).fill(''),\r\n    current: starter,\r\n    empty: true,\r\n    full: false,\r\n    winner: '',\r\n    tiles: [0, 0, 0],\r\n});\r\n\r\nexport const playMove = (state, position) => {\r\n    let grid = [...state.grid];\r\n    grid[position] = state.current;\r\n    return {\r\n        grid,\r\n        current: state.current === 'x' ? 'o' : 'x',\r\n        empty: false,\r\n        full: grid.filter(v => v === '').length === 0,\r\n        ...checkWinner(grid),\r\n    };\r\n};\r\n\r\nconst checkWinner = (grid) => {\r\n    for (let i = 0; i < 2; i++) {\r\n        const p = ['x', 'o'][i];\r\n        // -\r\n        for (let j = 0; j < 9; j += 3) {\r\n            if (grid[j + 0] === p && grid[j + 1] === p && grid[j + 2] === p) {\r\n                return {\r\n                    winner: p,\r\n                    tiles: [j + 0, j + 1, j + 2],\r\n                }\r\n            }\r\n        }\r\n        // |\r\n        for (let j = 0; j < 3; j += 1) {\r\n            if (grid[j + 0] === p && grid[j + 3] === p && grid[j + 6] === p) {\r\n                return {\r\n                    winner: p,\r\n                    tiles: [j + 0, j + 3, j + 6],\r\n                }\r\n            }\r\n        }\r\n        // \\\r\n        if (grid[0] === p && grid[4] === p && grid[8] === p) {\r\n            return {\r\n                winner: p,\r\n                tiles: [0, 4, 8],\r\n            }\r\n        }\r\n        // /\r\n        if (grid[2] === p && grid[4] === p && grid[6] === p) {\r\n            return {\r\n                winner: p,\r\n                tiles: [2, 4, 6],\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        winner: '',\r\n        tiles: [0, 0, 0],\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Application from './hooks/Application.js';\r\n\r\nReactDOM.render(<Application />, document.getElementById(\"root\"));\r\n","import React, { useState } from 'react';\r\nimport Toolbar from './Toolbar.js';\r\nimport Board from './Board.js';\r\nimport Status from './Status.js';\r\nimport { newGame, playMove } from './logic.js';\r\nimport './Application.css';\r\n\r\nexport default function Application() {\r\n    const [starter, setStarter] = useState('x');\r\n    const [game, setGame] = useState(newGame(starter));\r\n\r\n    const handleNewGame = () => {\r\n        setGame(newGame(starter));\r\n    };\r\n\r\n    const handleStarterChange = (starter) => {\r\n        setStarter(starter);\r\n        if (game.empty) {\r\n            setGame(newGame(starter));\r\n        }\r\n    };\r\n\r\n    const handleMovePlay = (position) => {\r\n        setGame(playMove(game, position));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Toolbar\r\n                starter={starter}\r\n                onNewGame={handleNewGame}\r\n                onStarterChange={handleStarterChange}\r\n            />\r\n            <Board\r\n                game={game}\r\n                onMovePlay={handleMovePlay}\r\n            />\r\n            <Status\r\n                game={game}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n"],"sourceRoot":""}